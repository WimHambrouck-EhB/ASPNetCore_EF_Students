// <auto-generated />
using ASPNetCore_EF_Students.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASPNetCore_EF_Students.Migrations
{
    [DbContext(typeof(StudentsContext))]
    [Migration("20230321204408_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ASPNetCore_EF_Students.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = ".NET Essentials"
                        },
                        new
                        {
                            Id = 2,
                            Name = ".NET Advanced"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Programming Essentials"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Programming Advanced"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Data Essentials"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Data Advanced"
                        });
                });

            modelBuilder.Entity("ASPNetCore_EF_Students.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Scores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Grade = 20,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Grade = 20,
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("ASPNetCore_EF_Students.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wim"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paul"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marvin"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Michael"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Amber"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Anna"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Belle"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Carrie"
                        });
                });

            modelBuilder.Entity("ASPNetCore_EF_Students.Models.Score", b =>
                {
                    b.HasOne("ASPNetCore_EF_Students.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNetCore_EF_Students.Models.Student", "Student")
                        .WithMany("Scores")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ASPNetCore_EF_Students.Models.Student", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
